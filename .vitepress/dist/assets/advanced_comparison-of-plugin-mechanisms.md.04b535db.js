import{_ as s,o as l,c as n,R as o}from"./chunks/framework.fed62f4c.js";const a="/rollup-plugin-execution-chart.png",d=JSON.parse('{"title":"插件机制介绍及其对比","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/comparison-of-plugin-mechanisms.md","filePath":"advanced/comparison-of-plugin-mechanisms.md","lastUpdated":null}'),p={name:"advanced/comparison-of-plugin-mechanisms.md"},e=o(`<h1 id="插件机制介绍及其对比" tabindex="-1">插件机制介绍及其对比 <a class="header-anchor" href="#插件机制介绍及其对比" aria-label="Permalink to &quot;插件机制介绍及其对比&quot;">​</a></h1><h2 id="vite-插件机制和-rollup-插件机制的区别" tabindex="-1">Vite 插件机制和 Rollup 插件机制的区别 <a class="header-anchor" href="#vite-插件机制和-rollup-插件机制的区别" aria-label="Permalink to &quot;Vite 插件机制和 Rollup 插件机制的区别&quot;">​</a></h2><p><code>Rollup</code> 插件的约定如下：</p><ol><li>插件应该有一个带有 <code>rollup-plugin-</code> 的前缀且名称清晰易懂。</li><li>在 <code>package.json</code> 中包含 <code>rollup-plugin</code> 关键词。</li><li>插件应该被测试。我们推荐使用 <code>mocha</code> 或者 <code>ava</code> 两款开箱即用的 promise 能力。</li><li>尽可能使用异步方法。例如，使用 <code>fs.readFile</code> 替换掉 <code>fs.readFileSync</code>。</li><li>插件文档使用英语来进行编写。</li><li>如何可以的话确定插件输出正确的 <code>source mappings</code>。</li><li>如果你的插件使用虚拟模块(例如用于辅助的函数)，模块ID以 <code>\\0</code> 为前缀。这样做可以防止其他插件试图处理虚拟模块。</li></ol><p><code>Rollup</code> 插件由 <code>PluginDriver</code> 函数来进行驱动的。里面提供了如下 <code>hook</code>。</p><ol><li><p><code>hookFirst</code></p><p><strong>说明：</strong><code>链式 Promise</code> 执行对应插件的钩子且保持调用参数不变，<code>hookFirst</code> 返回首个调用 <code>插件</code> 结果为非 <code>null</code> 或 <code>undefined</code> 的值。</p><p><strong>适用场景：</strong></p><ol><li><p>链式调用返回第一个被插件处理的值。</p></li><li><p>支持异步插件。</p></li><li><p>不改变参数，各个插件独立。</p></li></ol><p><strong>相关的插件hook：</strong><code>load</code>、<code>resolveDynamicImport</code>、<code>resolveId</code>、<code>shouldTransformCachedModule</code></p><ul><li><code>resolveId</code></li></ul><p>专门用来解析路径，对于相对路径转换为绝对路径通常只需要一个插件就可以实现。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// rollup/src/utils/resolveIdViaPlugins.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">resolveIdViaPlugins</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#A6ACCD;font-style:italic;">source</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#A6ACCD;font-style:italic;">importer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#A6ACCD;font-style:italic;">pluginDriver</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginDriver</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#82AAFF;">moduleLoaderResolveId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#A6ACCD;font-style:italic;">source</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#A6ACCD;font-style:italic;">importer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#A6ACCD;font-style:italic;">customOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomPluginOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#A6ACCD;font-style:italic;">isEntry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#A6ACCD;font-style:italic;">skip</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">importer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">plugin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Plugin</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">source</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">[] </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">     ) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ResolvedId</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#A6ACCD;font-style:italic;">skip</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">importer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">plugin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Plugin</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">source</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">[] </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#A6ACCD;font-style:italic;">customOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomPluginOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#A6ACCD;font-style:italic;">isEntry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ResolveIdResult</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">skipped</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Plugin</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">replaceContext</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ReplaceContext</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">|</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">skip</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">skipped</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Set</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">skippedCall</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">of</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">skip</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">             </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">source</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">skippedCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">source</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">importer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">skippedCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">importer</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                 </span><span style="color:#A6ACCD;">skipped</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">skippedCall</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">plugin</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">             </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#82AAFF;">replaceContext</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pluginContext</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">plugin</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">PluginContext</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">             </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">pluginContext</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">             </span><span style="color:#82AAFF;">resolve</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">source</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">importer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">custom</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">isEntry</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">skipSelf</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">BLANK</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                 </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">moduleLoaderResolveId</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">                     </span><span style="color:#A6ACCD;">source</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                     </span><span style="color:#A6ACCD;">importer</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                     </span><span style="color:#A6ACCD;">custom</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                     </span><span style="color:#A6ACCD;">isEntry</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                     </span><span style="color:#A6ACCD;">skipSelf</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">skip</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">importer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">plugin</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">source</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">skip</span></span>
<span class="line"><span style="color:#F07178;">                 )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">             </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pluginDriver</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hookFirst</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">resolveId</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">         [</span><span style="color:#A6ACCD;">source</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">importer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> custom</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">customOptions</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">isEntry</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">replaceContext</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">skipped</span></span>
<span class="line"><span style="color:#F07178;">     )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li><code>load</code></li></ul><p><code>load</code> 与虚拟模块的加载有很强的关联，通常一个虚拟模块与插件之间是一对一的关系，因此只需要被一个插件所处理就可以了。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// rollup/src/ModuleLoader.ts</span></span>
<span class="line"><span style="color:#A6ACCD;">source </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">readQueue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    (</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">pluginDriver</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hookFirst</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">load</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [id])) </span><span style="color:#89DDFF;">??</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFile</span><span style="color:#A6ACCD;">(id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li><li><p><code>hookFirstSync</code></p></li></ol><p><strong>说明：</strong></p><p>同步执行对应插件的钩子且保持调用参数不变，<code>hookFirstSync</code> 返回首个调用 <code>插件</code> 结果为非 <code>null</code> 或 <code>undefined</code> 的值。</p><p><strong>适用场景：</strong></p><ol><li><p>链式调用返回第一个被插件处理的值。</p></li><li><p>不支持异步插件。</p></li><li><p>不改变参数，各个插件独立。</p></li></ol><p><strong>相关的插件hook：</strong><code>renderDynamicImport</code>、<code>resolveAssetUrl</code>、<code>resolveFileUrl</code>、<code>resolveImportMeta</code></p><ol start="3"><li><code>hookParallel</code></li></ol><p><strong>说明：</strong> 同参数，对于没返回值的直接执行而对于有返回值则收集后并行执行。不会等待当前插件执行完成，无返回值。</p><p><strong>适用场景：</strong></p><ol><li><p>需要任务尽可能的完成。</p></li><li><p>不改变参数，不影响插件。</p></li><li><p>支持同步和异步插件钩子。</p></li></ol><p><strong>相关的插件hook：</strong><code>buildEnd</code>、<code>buildStart</code>、<code>moduleParsed</code>、<code>renderError</code>、<code>renderStart</code>、<code>writeBundle</code>、<code>closeBundle</code>、<code>closeWatcher</code>、<code>watchChange</code></p><ol start="4"><li><code>hookReduceArg0</code></li></ol><p><strong>说明：</strong> 只改变第一个参数，链式 <code>异步调用</code> 插件对应的 hook，由 reduce 函数来决策对第一个参数的修改，前后插件有强制的先后依赖。</p><p><strong>适用场景：</strong></p><ol><li><p>有链式修改插件的第一个参数的需求。</p></li><li><p>支持 <code>异步调用</code> 插件。</p></li><li><p>链式调用。</p></li></ol><p><strong>相关的插件hook：</strong><code>options</code>、<code>generateBundle</code>、<code>renderChunk</code>、<code>transform</code></p><ol start="5"><li><code>hookReduceArg0Sync</code></li></ol><p><strong>说明：</strong> 只改变第一个参数，链式 <code>同步调用</code> 插件对应的 hook，由 reduce 函数来决策对第一个参数的修改，前后插件有强制的先后依赖。</p><p><strong>适用场景：</strong></p><ol><li><p>有链式修改插件的第一个参数的需求。</p></li><li><p>仅支持 <code>同步调用</code> 插件。</p></li><li><p>链式调用。</p></li></ol><p><strong>相关的插件hook：</strong><code>augmentChunkHash</code>、<code>outputOptions</code></p><ol start="6"><li><code>hookReduceValue</code></li></ol><p><strong>说明：</strong> 传入插件的参数不变，插件不感知 <code>initialValue</code> 发生的变化。通过插件的返回值和 <code>reduce</code> 函数来确定 <code>initialValue</code> 的值，<code>链式异步调用</code>。</p><p><strong>适用场景：</strong></p><ol><li><p>专门用来处理用户自定义的一个变量(<code>initialValue</code>)，也就是说若变量受到插件返回值影响的时候则就可以考虑使用。</p></li><li><p>插件的参数不变，不影响插件的调用。</p></li><li><p>存在异步插件。</p></li></ol><p><strong>相关的插件hook：</strong><code>banner</code>、<code>footer</code>、<code>intro</code>、<code>outro</code></p><ol start="7"><li><code>hookReduceValueSync</code></li></ol><p><strong>说明：</strong> 传入插件的参数不变，插件不感知 <code>initialValue</code> 发生的变化。通过插件的返回值和 <code>reduce</code> 函数来确定 <code>initialValue</code> 的值，<code>链式同步调用</code>。</p><p><strong>适用场景：</strong></p><ol><li><p>专门用来处理用户自定义的一个变量(<code>initialValue</code>)，也就是说若变量受到插件返回值影响的时候则就可以考虑使用。</p></li><li><p>插件的参数不变，不影响插件的调用。</p></li><li><p>不存在异步插件</p></li></ol><p><strong>相关的插件hook：</strong><code>augmentChunkHash</code>、<code>outputOptions</code></p><ol start="8"><li><code>hookSeq</code></li></ol><p><strong>说明：</strong> 传入插件的参数保持不变，链式调用各个插件。</p><p><strong>适用场景：</strong></p><ol><li><p>有强烈的插件顺序要求</p></li><li><p>各个插件之间独立</p></li><li><p>存在异步插件</p></li></ol><p><strong>相关的插件hook：</strong><code>options</code>、<code>generateBundle</code>、<code>renderChunk</code>、<code>transform</code></p><p><strong>Rollup 插件执行图：</strong> 需要注意的是 <code>Rollup</code> 在执行插件的时候会注入 <code>context</code>，为插件提供额外的能力。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">pluginContexts </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">plugins</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">plugin</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    plugin</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">getPluginContext</span><span style="color:#A6ACCD;">(plugin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pluginCache</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> graph</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">fileEmitter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> existingPluginNames)</span></span>
<span class="line"><span style="color:#A6ACCD;">  ])</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">private runHook</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">H</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AsyncPluginHooks</span><span style="color:#89DDFF;">&gt;(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">hookName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">H</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Parameters</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">PluginHooks</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">H</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">plugin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Plugin</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">permitValues</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">hookContext</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ReplaceContext</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EnsurePromise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ReturnType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">PluginHooks</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">H</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hook</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">plugin</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">hookName</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">hook</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">pluginContexts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">plugin</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">!;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">hookContext</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">context</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">hookContext</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">plugin</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>注入的 <code>context</code> 能力包含</p><ol><li><p><strong>addWatchFile：(id: string) =&gt; void</strong></p><p>添加要在 <code>watch</code> 模式下监听的其他文件，以至于但这些文件发生改变的时候会触发重构建流程。<code>id</code> 可以是绝对路径或者对于当前工作目录的相对路径。这个上下文方法只能用于构建阶段，如 <code>buildStart</code>、 <code>load</code>、 <code>resolveId</code>、 <code>transform</code>。</p><p><strong>注意：</strong> 通常用于在 <code>watch</code> 模式下提升重打包的速度，只有当给定模块的内容实际发生更改时，才会触发 <code>transform</code> 的钩子。在 <code>transform</code> 中使用 <code>this.addWatchFile</code>，如果监听到文件发生了变化，那么 <code>transform</code> 钩子将会重新解析这个模块(是否需要rebuild)。</p></li><li><p>cache</p></li><li><p>emitAsset</p></li><li><p>emitChunk</p></li><li><p><strong>emitFile</strong></p></li></ol><p>生成新的需要被包含在构建输出的模块。方法会返回一个 <code>referenceId</code>，用户可以在各种地方使用 <code>referenceId</code> 来索引到新生成的模块。<code>emitFile</code> 支持两种格式：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EmittedChunk</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">chunk</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">fileName</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">implicitlyLoadedAfterOneOf</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">importer</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">preserveSignature</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">allow-extension</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">exports-only</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EmittedAsset</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">asset</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">fileName</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">source</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Uint8Array</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">};</span></span></code></pre></div><p>在以上两个格式中，可以提供了 <code>fileName</code> 或 <code>name</code>。如果 <code>fileName</code> 被提供，</p><ol start="6"><li>error</li><li>getAssetFileName</li><li>getChunkFileName</li><li>getFileName</li><li>getModuleIds</li><li>getModuleInfo</li><li>getWatchFiles</li><li>isExternal</li><li>load</li><li>meta</li><li>moduleIds</li><li>parse</li><li>resolve</li><li>resolveId</li><li>setAssetSource</li><li>warnv</li></ol><p><code>Rollup</code> 插件在构建阶段和输出生成阶段会调用各种钩子函数以此来触发 <code>plugin hook</code>。</p><p>执行流程图如下： <img src="`+a+'" alt="Rollup插件执行图"></p><div class="tip custom-block"><p class="custom-block-title">Rollup 插件机制总结</p><p><strong>优点：</strong><code>Rollup</code> 的插件和其他大型框架大同小异，都是提供统一的接口并贯彻了约定优于配置的思想。<code>8</code> 种 <code>hook</code> 加载函数使 <code>Rollup</code> 的插件开发非常灵活，同时也带来了学习成本。</p><p>和 <code>Webpack</code> 相比，<code>Rollup</code> 的插件系统自成一派且没有区分 <code>plugin</code> 和 <code>loader</code>。<code>Rollup</code> 插件机制的核心是构建阶段和输出生成阶段的各种钩子函数。内部通过基于 <code>Promise</code> 实现异步 <code>hook</code> 的调度。</p><p><strong>缺点：</strong></p><ol><li><p>源码全都糅杂在一个库中，模块、工具函数管理的看起来很随意。</p></li><li><p>无法直接移植它的任何工具到我们的项目中，相比起来，webpack 的插件系统封装成了一个插件 <code>tapable</code> 就很利于我们学习和使用。</p></li></ol></div><h3 id="vite-在其中的作用" tabindex="-1">Vite 在其中的作用 <a class="header-anchor" href="#vite-在其中的作用" aria-label="Permalink to &quot;Vite 在其中的作用&quot;">​</a></h3><p><code>Vite</code> 在构建阶段借助了 <code>Rollup</code> 的能力，因此需要兼容 <code>Rollup</code> 的插件生态(将 <code>dev</code> 阶段的插件兼容到 <code>build</code> 阶段)，通过借鉴 <code>Rollup</code> 的插件机制来实现一套类似的插件体系。</p><p>因此对于 <code>Vite</code> 来说也为插件实现了如下能力</p><ol><li>实现 <code>Rollup</code> 插件钩子的调度。</li><li>实现类似 <code>Rollup</code> 的插件上下文机制。</li><li>对钩子的返回值进行相应处理</li><li>实现钩子的类型</li></ol><h2 id="webpack-插件机制" tabindex="-1">Webpack 插件机制 <a class="header-anchor" href="#webpack-插件机制" aria-label="Permalink to &quot;Webpack 插件机制&quot;">​</a></h2><h3 id="tapable-的作用" tabindex="-1">Tapable 的作用 <a class="header-anchor" href="#tapable-的作用" aria-label="Permalink to &quot;Tapable 的作用&quot;">​</a></h3><p><code>Tapable</code> 是一个类似于 <code>Node.js</code> 中的 <code>EventEmitter</code> 的库，但它更专注于自定义事件的触发和处理。通过 <code>Tapable</code> 我们可以注册自定义事件，然后在适当的时机去执行自定义事件。</p>',59),t=[e];function c(r,F,y,D,i,C){return l(),n("div",null,t)}const u=s(p,[["render",c]]);export{d as __pageData,u as default};
